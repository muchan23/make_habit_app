# Cursor Rules for HabitTracker

## プロジェクト概要
GitHub風の習慣化アプリ「HabitTracker」の開発プロジェクトです。

## 重要なファイル
- `docs/requirements.md` - 詳細な要件定義書（必ず参照）
- `docs/implementation-plan.md` - 実装計画書
- `README.md` - プロジェクト概要

## 実装時の注意点

### 1. 要件定義書の参照
- 実装前に必ず `docs/requirements.md` を確認
- 機能要件、データベース設計、API設計を厳密に遵守
- 相対的評価システムの実装を忘れずに

### 2. 技術スタック
- Next.js 14 + TypeScript
- Tailwind CSS + Radix UI
- Zustand（状態管理）
- Prisma + PostgreSQL
- Google Calendar API

### 3. 設計原則
- GitHub風のミニマルデザイン
- 相対的評価による色の濃淡（上位=明るい、下位=暗い）
- 手動分類を前提とした拡張性設計
- 双方向カレンダー連携

### 4. 実装順序
1. 基盤構築（認証、データベース）
2. コア機能（目標管理、カレンダー表示）
3. 連携機能（Googleカレンダー、分類システム）
4. AI機能（行動提案）

### 5. コード品質
- TypeScriptの型安全性を確保
- エラーハンドリングの実装
- アクセシビリティの考慮
- レスポンシブデザイン

### 6. データベース設計
- 要件定義書のテーブル構造を厳密に遵守
- 相対的評価システムの実装
- 拡張性を考慮した設計

## 実装方法
- **実装者**: ユーザーが実際のコードを記述
- **AIの役割**: チャット欄で実装内容を提案・ガイド
- **実装提案**: 具体的なコード例、ファイル構造、実装手順を提示

## 実装時の質問
実装中に不明な点がある場合は、要件定義書を参照し、必要に応じて確認してください。
